#@data/values
#@overlay/match-child-defaults missing_ok=True

---
# Docker images setting
image:
  #repository: registry.tkg.vmware.run/harbor
  #tag: v2.0.2_vmware.1
  #pullPolicy: IfNotPresent
  repository: projects.registry.vmware.com/tkg/harbor
  tag: v2.1.3_vmware.1
  pullPolicy: IfNotPresent

# The namespace to install Harbor
namespace: tanzu-system-registry

# The FQDN for accessing Harbor admin UI and Registry service.
hostname: harbor.caas.pez.pivotal.io #core.harbor.domain
# The network port of the Envoy service in Contour or other Ingress Controller.
port:
  https: 443

# [Optional] The certificate for the ingress if you want to use your own TLS certificate.
# We will issue the certificate by cert-manager when it's empty.
tlsCertificate:
  # [Required] the certificate
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIF4zCCBMugAwIBAgITPQAAAAf7evlqwDw2NwAAAAAABzANBgkqhkiG9w0BAQsF
    ADBzMRIwEAYKCZImiZPyLGQBGRYCaW8xFzAVBgoJkiaJk/IsZAEZFgdwaXZvdGFs
    MRMwEQYKCZImiZPyLGQBGRYDcGV6MRQwEgYKCZImiZPyLGQBGRYEY2FhczEZMBcG
    A1UEAxMQY2Fhcy1DQUFTQURDMS1DQTAeFw0yMTA4MTIxNzM4NTZaFw0yMzA4MTIx
    NzM4NTZaMHgxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTERMA8GA1UEBxMIUGFs
    b0FsdG8xDzANBgNVBAoTBlZNd2FyZTETMBEGA1UECxMKY29tbWVyY2lhbDEjMCEG
    A1UEAxMaaGFyYm9yLmNhYXMucGV6LnBpdm90YWwuaW8wggEiMA0GCSqGSIb3DQEB
    AQUAA4IBDwAwggEKAoIBAQDD5W9VY6uibWvo4IvM4xCESmEiLGlqSm1jyje9XI0i
    6OuCSzocmktgtjIgPPAxLDa1j1RJcaIZqG1s8sA9ICKhwtP2TbsU4OpPs4ae7PWJ
    rYuPPyKGeiObNI9Wy/4PWLv9v3vqL83K/64HR2bJ0/5/SW+8TPFlPqCBCr4NwMOB
    64WJxs48uJNYrqdxQacbM+CV/J8G1KDHKEacLU66/fX2wijzPU/uh/+OnQ8dqd7s
    Eh5J1FLUfJOOk35JZ8p23FMDnZcqm/QJoF0wszLfVtWe0mBnC7GoklSK54IOIIbO
    EzVZB8sArZmf8WtUfk/3zzlIK8Q70N0Z+X5Ti5xgGnrNAgMBAAGjggJpMIICZTAO
    BgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwEwKAYDVR0RBCEwH4IG
    aGFyYm9yghUqLmNhYXMucGV6LnBpdm90YWwuaW8wHQYDVR0OBBYEFAMzfpBr6/vQ
    EGitsE7avHH3swJ9MB8GA1UdIwQYMBaAFMnTq9GXuJwj6uNLnvfiDOV9OD/OMIHd
    BgNVHR8EgdUwgdIwgc+ggcyggcmGgcZsZGFwOi8vL0NOPWNhYXMtQ0FBU0FEQzEt
    Q0EsQ049Y2Fhc2FkYzEsQ049Q0RQLENOPVB1YmxpYyUyMEtleSUyMFNlcnZpY2Vz
    LENOPVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRpb24sREM9Y2FhcyxEQz1wZXosREM9
    cGl2b3RhbCxEQz1pbz9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jhc2U/b2Jq
    ZWN0Q2xhc3M9Y1JMRGlzdHJpYnV0aW9uUG9pbnQwgdAGCCsGAQUFBwEBBIHDMIHA
    MIG9BggrBgEFBQcwAoaBsGxkYXA6Ly8vQ049Y2Fhcy1DQUFTQURDMS1DQSxDTj1B
    SUEsQ049UHVibGljJTIwS2V5JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29u
    ZmlndXJhdGlvbixEQz1jYWFzLERDPXBleixEQz1waXZvdGFsLERDPWlvP2NBQ2Vy
    dGlmaWNhdGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZpY2F0aW9uQXV0aG9yaXR5
    MCEGCSsGAQQBgjcUAgQUHhIAVwBlAGIAUwBlAHIAdgBlAHIwDQYJKoZIhvcNAQEL
    BQADggEBACXMSxpNo6qHSJsIOW4XCnaTKW3RSTamjmkvvhAvg5WE5lChuGLA/Ef2
    F6TAWDR3HuSLxn6oOo5L0kIWQJ8ceTcsd1+EvIoFKY5CFKSpoAhAVX2ca35ozqYj
    igWWBxI2GA+PXiqpey0p8ZbwseN3lR2fiay3kXuctwwaTZ8Hc1PXcCLVj2h86TZG
    ZyZKSfjjhmkC731pA4hJf6Dth5oxdNod+cNWZPrHf+omE1zKT8dIWXdRvR+jLQUf
    M8kL5Df8cYHBgyn/dFcqtqyzFx+3NfxoWNbxcqi9hbPIbmCH6mzCYhDjYIH1NMbq
    nUJ47hHvT2ozi4280F0jLoo5nFnziys=
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDD5W9VY6uibWvo
    4IvM4xCESmEiLGlqSm1jyje9XI0i6OuCSzocmktgtjIgPPAxLDa1j1RJcaIZqG1s
    8sA9ICKhwtP2TbsU4OpPs4ae7PWJrYuPPyKGeiObNI9Wy/4PWLv9v3vqL83K/64H
    R2bJ0/5/SW+8TPFlPqCBCr4NwMOB64WJxs48uJNYrqdxQacbM+CV/J8G1KDHKEac
    LU66/fX2wijzPU/uh/+OnQ8dqd7sEh5J1FLUfJOOk35JZ8p23FMDnZcqm/QJoF0w
    szLfVtWe0mBnC7GoklSK54IOIIbOEzVZB8sArZmf8WtUfk/3zzlIK8Q70N0Z+X5T
    i5xgGnrNAgMBAAECggEBALDmicmEfkPpqB7eV6CoFAxC1sBzdqZjm7EXtYos/87c
    o4A/yrR1qUgmf9GY9haRpL4ENssz8HxXGqnd9Te9w0hsldjAjQbnrPBYYGM3/Otd
    ar/q9ZSWy3ym1CI/iKf3K5yTxKTQkniUt2UfV3U/GX18pYhXu04AZhThzIrC3kp8
    /gDQ9Q16tH2Wx6IegHBsvsE5DLSp7lgCMXjov474dLi23nofIQ/jexV41kOI0yM6
    1/5xGubvAXecCEDZQdtc1vEtBq04lhuJ+8GF2cwMClZSNjDZ95M1FZ/avaGi5pGn
    lb6VrjiGUectf7uKrYaBpS4HdLN6fkjW/i/JT1vLX0kCgYEA7xu7xD0GJWiCSUtB
    C0PnLruCO4ejwCwNNsmkIVRGIEwIxtzF/z+bRPLnb7owMfpZVgHRnJ5TpRBI0XHK
    j3b/wDXNfH/BEg2QTHU74HgKfmIkknO1wzGrwHFl8JrmdiDwYUbVZfYqYg5/bo+i
    sGsAoRp+Tu2zv5rU+AquJUxF8DsCgYEA0bw2QLUmZC2imXmbldmupef5lH+5fEBV
    i/RwczE8X6Hm0IRdbx9scY1+6b6le5RtLqM+Aq4XzOOb5xH4G+4WwIIza+bfQ2FT
    WXLMC/uHqTKbQQIIlB0zjdLJ+0nI7nVGKa7zrZb9XNTVKWV8A2pPLgUeHK1pOu5i
    Sk1L9oX42JcCgYAvc6OJyEqF9f2VKhgYcjtY7OFliv+WTae5rb6i1qSsGCrNvFaW
    1zqrLkF7zMlvwa0lAmtk147l/RtWZWy7l/QdYxAKmxfny0VNxx5A59G9TyDO56O0
    vxDEujxuyW7fFp5dz77d40J5/0KO4HZ66GFRl35lj4rShZmqOARjZoWirQKBgCG4
    mhxzQ7XtpGv6ompIco0YLAeVNZRln5t99KqAqw1RMZQrA/6+1ae4MUSRs3eYGKnb
    8zdpGEiH++P9/p82+49+H5hkqVbjCgyiqW3vxhMNIOsl0Y1G2Kgf0PvHFDhKwLoo
    9+LcGOZZDeC3AWZnLE3g4sOHmhiwhTsfDGyZg7YHAoGBAKo9+WgZeIUd5Tifqxzj
    oFBGpQx4WFubWICjJSETuBhFuw1wNtub7uJ49Z633uF4kJtJ2SJz2zjXH5bYcxQr
    fUsRKmwOUzINjCOVG3bjMs9uAOXnY5phVXfI66zBPtNpTvImAHi0KfN6SAwcXmn4
    RQnv85n8bbnR1J8p2EIp+r/q
    -----END PRIVATE KEY-----
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDwTCCAqmgAwIBAgIQGqd0k74VRqNKSsmRf/CXBjANBgkqhkiG9w0BAQsFADBz
    MRIwEAYKCZImiZPyLGQBGRYCaW8xFzAVBgoJkiaJk/IsZAEZFgdwaXZvdGFsMRMw
    EQYKCZImiZPyLGQBGRYDcGV6MRQwEgYKCZImiZPyLGQBGRYEY2FhczEZMBcGA1UE
    AxMQY2Fhcy1DQUFTQURDMS1DQTAeFw0yMDA0MjMxOTIxNDNaFw0zMDA0MjMxOTMx
    NDJaMHMxEjAQBgoJkiaJk/IsZAEZFgJpbzEXMBUGCgmSJomT8ixkARkWB3Bpdm90
    YWwxEzARBgoJkiaJk/IsZAEZFgNwZXoxFDASBgoJkiaJk/IsZAEZFgRjYWFzMRkw
    FwYDVQQDExBjYWFzLUNBQVNBREMxLUNBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
    MIIBCgKCAQEAvdToshEoTJ2kV27tF4nyAnYoRNwAnnddVCGGl2xyZ37Wb3PITVmS
    0wqeqWqbXsD0JFpE/H1VqA9yCzaTkkRo4f5IN/SYlatdZExkIamXitkclh1TjfJk
    EBG0vKxxvl2FABCfnK/5A/Ev/MZn94dOg+jXqYISp0zMPnJFczca3IUIFuWcgJFg
    vVPPvh1P8aAFjfOFJYA743L24AdqzFqkCvRLikpGsOJufjyL7JuuAAK4kKeVX1dQ
    EjRuBtSa83zAt0a+0z3pzu+hAEsuyBdQXfT7wm1UEPI5iRkVmDDELdDGzM1l1O3c
    QmR+6gp6ef4qkyLszuUnoe6D4gS5ODWzRwIDAQABo1EwTzALBgNVHQ8EBAMCAYYw
    DwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUydOr0Ze4nCPq40ue9+IM5X04P84w
    EAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQELBQADggEBADSmfeC93Zzja6Iz
    dBEWoa4UgXEMDwYW7QXU9t9j0Gg77q4+C1MeGDmn1lZryybG5EC9x/0PGJjRS1Mo
    Gz6OC7KhHAQNuYg6uZE/twSR5l4ozGzGtmEjHoG0+qngBQtrxjYN/1j/YN2Nq+2Y
    ei64YddtsEuHgAlM3dUoKLJ7BuoB/ddl223vm4f4hZlr0zNjS1w0S5z8w9m5Q90C
    pSO+m8OB3/vWrSjh6y/8x8VgXI9fxLk0hdlykyyptFNI8fWh/yZWJ2lajpzEzQoT
    wzl1Tw32KwVurStEHkzH/7Iq1s2D718lHi4lqbXJ1j6TE+M1dayDlkdJuHMwXH3f
    28qq5Tg=
    -----END CERTIFICATE-----

# Use contour http proxy instead of the ingress when it's true
enableContourHttpProxy: true

# [Required] The initial password of Harbor admin.
harborAdminPassword: Pivotal123!

# [Required] The secret key used for encryption. Must be a string of 16 chars.
secretKey: K3QD2Mnpa9y6ksZP

database:
  # [Required] The initial password of the postgres database.
  password: Gk59th1EBjBzPHsU

core:
  replicas: 1
  # [Required] Secret is used when core server communicates with other components.
  secret: VOjXzKvrQVPABIMc
  # [Required] The XSRF key. Must be a string of 32 chars.
  xsrfKey: pccHaGpbPfBz8UbmSc6fNKSF6zwjGP0Y
jobservice:
  replicas: 1
  # [Required] Secret is used when job service communicates with other components.
  secret: j2mVuFficOFU0g3K
registry:
  replicas: 1
  # [Required] Secret is used to secure the upload state from client
  # and registry storage backend.
  # See: https://github.com/docker/distribution/blob/master/docs/configuration.md#http
  secret: kOKRMtzxKc1Z7Tlr
notary:
  # Whether to install Notary
  enabled: true
clair:
  # Whether to install Clair scanner
  enabled: false
  replicas: 0
  # The interval of clair updaters, the unit is hour, set to 0 to
  # disable the updaters
  updatersInterval: 12
trivy:
  # enabled the flag to enable Trivy scanner
  enabled: true
  replicas: 1
  # gitHubToken the GitHub access token to download Trivy DB
  gitHubToken: ""
  # skipUpdate the flag to disable Trivy DB downloads from GitHub
  #
  # You might want to set the value of this flag to `true` in test or CI/CD environments to avoid GitHub rate limiting issues.
  # If the value is set to `true` you have to manually download the `trivy.db` file and mount it in the
  # `/home/scanner/.cache/trivy/db/trivy.db` path.
  skipUpdate: false

# The persistence is always enabled and a default StorageClass
# is needed in the k8s cluster to provision volumes dynamicly.
# Specify another StorageClass in the "storageClass" or set "existingClaim"
# if you have already existing persistent volumes to use
#
# For storing images and charts, you can also use "azure", "gcs", "s3",
# "swift" or "oss". Set it in the "imageChartStorage" section
persistence:
  persistentVolumeClaim:
    registry:
      # Use the existing PVC which must be created manually before bound,
      # and specify the "subPath" if the PVC is shared with other components
      existingClaim: ""
      # Specify the "storageClass" used to provision the volume. Or the default
      # StorageClass will be used(the default).
      # Set it to "-" to disable dynamic provisioning
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 100Gi
    jobservice:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
    database:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
    redis:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 1Gi
    trivy:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
  # Define which storage backend is used for registry and chartmuseum to store
  # images and charts. Refer to
  # https://github.com/docker/distribution/blob/master/docs/configuration.md#storage
  # for the detail.
  imageChartStorage:
    # Specify whether to disable `redirect` for images and chart storage, for
    # backends which not supported it (such as using minio for `s3` storage type), please disable
    # it. To disable redirects, simply set `disableredirect` to `true` instead.
    # Refer to
    # https://github.com/docker/distribution/blob/master/docs/configuration.md#redirect
    # for the detail.
    disableredirect: false
    # Specify the "caBundleSecretName" if the storage service uses a self-signed certificate.
    # The secret must contain keys named "ca.crt" which will be injected into the trust store
    # of registry's and chartmuseum's containers.
    # caBundleSecretName:

    # Specify the type of storage: "filesystem", "azure", "gcs", "s3", "swift",
    # "oss" and fill the information needed in the corresponding section. The type
    # must be "filesystem" if you want to use persistent volumes for registry
    # and chartmuseum
    type: filesystem
    filesystem:
      rootdirectory: /storage
      #maxthreads: 100
    azure:
      accountname: accountname # required
      accountkey: base64encodedaccountkey # required
      container: containername # required
      realm: core.windows.net # optional
    gcs:
      bucket: bucketname # required
      # The base64 encoded json file which contains the key
      encodedkey: base64-encoded-json-key-file # optional
      rootdirectory: null # optional
      chunksize: 5242880 # optional
    s3:
      region: us-west-1 # required
      bucket: bucketname # required
      accesskey: null # eg, awsaccesskey
      secretkey: null # eg, awssecretkey
      regionendpoint: null # optional, eg, http://myobjects.local
      encrypt: false # optional
      keyid: null # eg, mykeyid
      secure: true # optional
      v4auth: true # optional
      chunksize: null # optional
      rootdirectory: null # optional
      storageclass: STANDARD # optional
    swift:
      authurl: https://storage.myprovider.com/v3/auth
      username: username
      password: password
      container: containername
      region: null # eg, fr
      tenant: null # eg, tenantname
      tenantid: null # eg, tenantid
      domain: null # eg, domainname
      domainid: null # eg, domainid
      trustid: null # eg, trustid
      insecureskipverify: null # bool eg, false
      chunksize: null # eg, 5M
      prefix: null # eg
      secretkey: null # eg, secretkey
      accesskey: null # eg, accesskey
      authversion: null # eg, 3
      endpointtype: null # eg, public
      tempurlcontainerkey: null # eg, false
      tempurlmethods: null # eg
    oss:
      accesskeyid: accesskeyid
      accesskeysecret: accesskeysecret
      region: regionname
      bucket: bucketname
      endpoint: null # eg, endpoint
      internal: null # eg, false
      encrypt: null # eg, false
      secure: null # eg, true
      chunksize: null # eg, 10M
      rootdirectory: null # eg, rootdirectory

# The http/https network proxy for clair, core, jobservice, trivy
proxy:
  httpProxy:
  httpsProxy:
  noProxy: 127.0.0.1,localhost,.local,.internal

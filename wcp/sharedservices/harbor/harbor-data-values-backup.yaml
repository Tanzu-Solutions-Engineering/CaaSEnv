#@data/values
#@overlay/match-child-defaults missing_ok=True

---
# Docker images setting
image:
  repository: registry.tkg.vmware.run/harbor
  tag: v2.0.2_vmware.1
  pullPolicy: IfNotPresent

# The namespace to install Harbor
namespace: tanzu-system-registry

# The FQDN for accessing Harbor admin UI and Registry service.
hostname: harbor.caas.pez.pivotal.io #core.harbor.domain
# The network port of the Envoy service in Contour or other Ingress Controller.
port:
  https: 443

# [Optional] The certificate for the ingress if you want to use your own TLS certificate.
# We will issue the certificate by cert-manager when it's empty.
tlsCertificate:
  # [Required] the certificate
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDWzCCAkOgAwIBAgIRAMRNGpX6KUOyyhNUE6KAt/MwDQYJKoZIhvcNAQELBQAw
    LTEXMBUGA1UEChMOUHJvamVjdCBIYXJib3IxEjAQBgNVBAMTCUhhcmJvciBDQTAe
    Fw0yMDExMjEwMDE0MzlaFw0zMDExMTkwMDE0MzlaMCoxFzAVBgNVBAoTDlByb2pl
    Y3QgSGFyYm9yMQ8wDQYDVQQDEwZoYXJib3IwggEiMA0GCSqGSIb3DQEBAQUAA4IB
    DwAwggEKAoIBAQDKsVeecH+f/8zdDJiolqE2afXB6SIf3Qf/cLKCS/TMFz9ni1n5
    Ft16kO6+OO26owz7Z316zKqDoSUi1NndIrOcQH/ME+LCpafy32Y5fD/mLKcGuHyB
    9P5/ModVtNjSao9xl+RxQDEjb74WpwToNgnOaa1mZO/nIKgIkBkgE/W7Ie9oOe3R
    /iMOgWtH5W/fsNeoc/+DsLJ2mguMPkSMDZAeX9pdPTDMMO10Gs/N3eafcvtwdyY7
    QqVmFAYC1L24WFj+wiNQf657chFrgno13Zzab5M3frGrYbAqA2/VqMAp/rBwt1bE
    VcJKWZvEqMVlup+oslw4WinSD8ra0tOLSpU5AgMBAAGjeTB3MB0GA1UdJQQWMBQG
    CCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMEgGA1UdEQRBMD+CGmhh
    cmJvci5jYWFzLnBlei5waXZvdGFsLmlvgiFub3RhcnkuaGFyYm9yLmNhYXMucGV6
    LnBpdm90YWwuaW8wDQYJKoZIhvcNAQELBQADggEBAHcXjSTdXHKdAqQj9hGxiYUi
    AOs97IbWAbjQK0lRRaDBCMPJdH7aBWFsSznD4czvlV6QkfRqTlMts9xyHO5DzJip
    kVfPigOR3krBRNQNN6x8Ai2JO6Isi6VfM6tnD5qb78rEUYz6C57UwMoKRP8GxvrU
    FR43dQxGwIrgam1ZEwjmLdLTP35hOxWWYte9mf/hnQDhxjfmZZGqRJThSMZorik0
    Q8T9RSvMjPX3KAeN3SVvzDeby3PJbfDy1+pMv+MFuPDCmQq/nA5DmTWXE5UB5uXv
    Nuzys3xc+eqYOFjX26dC4JnnnDD+IEVWWu+TnpcZpxjx+PcoJO1Y7mQgCEqQYk8=
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEAyrFXnnB/n//M3QyYqJahNmn1wekiH90H/3Cygkv0zBc/Z4tZ
    +RbdepDuvjjtuqMM+2d9esyqg6ElItTZ3SKznEB/zBPiwqWn8t9mOXw/5iynBrh8
    gfT+fzKHVbTY0mqPcZfkcUAxI2++FqcE6DYJzmmtZmTv5yCoCJAZIBP1uyHvaDnt
    0f4jDoFrR+Vv37DXqHP/g7CydpoLjD5EjA2QHl/aXT0wzDDtdBrPzd3mn3L7cHcm
    O0KlZhQGAtS9uFhY/sIjUH+ue3IRa4J6Nd2c2m+TN36xq2GwKgNv1ajAKf6wcLdW
    xFXCSlmbxKjFZbqfqLJcOFop0g/K2tLTi0qVOQIDAQABAoIBAQCTqNP6wVvINHKK
    ykVf87PnzxNQu0S3z66m4PO6RhlEoN740KSv+H9KbdDu1MwiveuULlVUI0tI7xj9
    ofBAz6nm93niMs5sHIAYR7TRxflK9laLZ9SUW+UWxrmer0uRJj3vc8bg1fG2Lg5d
    tDi37b4BGC1RPdEjIEApVMho/QFz27wqIdo3mWab7ifyY+Ewr+gIqcZpXp5feu8p
    64722XQv7GNZTo8o+lKeuX6Q+vJwty2k04rblA8oCLjwXVlOPaYIkdUWC17i5Qgr
    D8MB21/KLrzYS5PvWsLByCYhaKSwrM6zhhdH4zQdgQ2R12LTNTUZAVH/pZcOgkKt
    tMFdzi1xAoGBAP09Lt6XvrG0VnSqfGbYymAmSvVrJ91bvAM4ejK9z5pYHhlygcBr
    RbSDX3Qgt6Ew16+0MCUQ34+goaevfX6o7G7DdGjqOhryloehe5X76c5OAZFdxf/S
    lFV3rMD+5Q0FUFSEaf8Hm6SUI6WMDrkZ1UPvLx+IrTty+o8IQ54AT1qFAoGBAMzn
    FEfDMkngBZGxZUM798bpcIwXqQsqHuTJ0s94OM6TbU15SbaBgFqMpLOxFn0MiXL0
    EuMfFDX4R5Gbj4RygGmfNF4U9ZXyM2D+hu0N6XBDyCzZOHRyTZDDumw7544jW/7/
    QLB5STfejytx/05/mLjr0owIrqjIRLgLjNw1UIAlAoGAQ6XrdlTtAQWers24K7Uv
    4p14GrVEUfKmd+nHYvSnl6CAceXP2XoOhdkuT5RJ2Yp1o58r2Ur3naOYa3YKvSIc
    /r3BxCEF4pr5MUQnAnroC091RcLaGKvFKkus32V4BJFt0xYIRrNelYlpOFkAudu3
    x80GNpNJS388hab8gSGuEQ0CgYEAsgiJv3yjwjqKvDdFg/Cj7knAh4i7UT8Mzr9p
    kuijeyHvk6Qx3wiQbJzNMnBI2Og+uQnHK15Cok4SaTqfrXYLizpQNvrBE8L4z2r3
    8xrmXKwYTpeCjPMP4BugbBB0tjSU53ADVhJcAtY20YngSeVl3i7QpumYUICJ7Nvk
    TSVpx50CgYADXy+Y9LdXy/mOTF+MMMov+QAx2NRAiuFLFiJvlwvjSwc5tCdrbMhe
    kVyGpLsFOFnnHOiYB2/isqG2whoq7OFnTMqpPxgUQyfrIV3Q8RJlLWrjMW3lSkI+
    ej+N1jRaV4lUyXpnzajFK4y612QD7oOaoXspfz65OvDZRs3H7efN+Q==
    -----END RSA PRIVATE KEY-----
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDOzCCAiOgAwIBAgIQWb0jBlfnNvDZRXxGuJZNdzANBgkqhkiG9w0BAQsFADAt
    MRcwFQYDVQQKEw5Qcm9qZWN0IEhhcmJvcjESMBAGA1UEAxMJSGFyYm9yIENBMB4X
    DTIwMTEyMTAwMTM1OVoXDTMwMTExOTAwMTM1OVowLTEXMBUGA1UEChMOUHJvamVj
    dCBIYXJib3IxEjAQBgNVBAMTCUhhcmJvciBDQTCCASIwDQYJKoZIhvcNAQEBBQAD
    ggEPADCCAQoCggEBALVgW7OPBZa0N+wfFX+DW28ya10vHmrnEjpMtOMcqqDcbtnH
    zHJfl3ubnsMHgDrSfhx6W87OChVsySt4jRKantr8kKQGNSUOqW70wjii3AmlXBLi
    vuvw/6LUM3oXyH+gBHIrQfQJ7TxO2PdyNf8udHil2nHOo1NlNMG2avDKT7kxmPXr
    cl+3v7m833YEppIFFO0KgYyTfHbScQzH209gkUpti2eTV/7u3PIHg0RCCoCur9XX
    JTc9iv+MNv7Q2WkcesjnjN8Viacar/Tf51hWIxjL3XH2dtLMQjAJPlHahp6LwAFJ
    eLWfay2EnmjCQaXIVHM9Y6MjX2hwtgdW8Xm0STUCAwEAAaNXMFUwDgYDVR0PAQH/
    BAQDAgIEMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8E
    BTADAQH/MBMGA1UdEQQMMAqCCGhhcmJvcmNhMA0GCSqGSIb3DQEBCwUAA4IBAQCD
    oaX/OuKsYYy7HGprp6wMukAQIUrNtmeCkYfIPRt6j37qtg5Rw8g+r+Gy36ZOU/I9
    aa9joVslKFQVtgyR/h2tzHs7QYtoD6F526EN3HZSj1EwZy7VcuUbScSxmq3ix5Vp
    NgBSZxIfUJKiDpgqtb0lMzUfLpHZnHz88HUPC2fnpt220UnrHETkniVEYlZR7pFF
    Xqr7npoDVnsgLE9naqOny/23luS8kXwavqdSKBIRdTLBd47MsNO+gXtNGQS/B7My
    FzSwbpyiHSIyzLm9X5zdjQP5HqUQOEvO4hwuPz0toh9Sij3EIlNdsMLnL346RENN
    fZDDC5RynCcADMNjnkuS
    -----END CERTIFICATE-----

# Use contour http proxy instead of the ingress when it's true
enableContourHttpProxy: true

# [Required] The initial password of Harbor admin.
harborAdminPassword: Pivotal123!

# [Required] The secret key used for encryption. Must be a string of 16 chars.
secretKey: K3QD2Mnpa9y6ksZP

database:
  # [Required] The initial password of the postgres database.
  password: Gk59th1EBjBzPHsU

core:
  replicas: 1
  # [Required] Secret is used when core server communicates with other components.
  secret: VOjXzKvrQVPABIMc
  # [Required] The XSRF key. Must be a string of 32 chars.
  xsrfKey: pccHaGpbPfBz8UbmSc6fNKSF6zwjGP0Y
jobservice:
  replicas: 1
  # [Required] Secret is used when job service communicates with other components.
  secret: j2mVuFficOFU0g3K
registry:
  replicas: 1
  # [Required] Secret is used to secure the upload state from client
  # and registry storage backend.
  # See: https://github.com/docker/distribution/blob/master/docs/configuration.md#http
  secret: kOKRMtzxKc1Z7Tlr
notary:
  # Whether to install Notary
  enabled: true
clair:
  # Whether to install Clair scanner
  enabled: true
  replicas: 1
  # The interval of clair updaters, the unit is hour, set to 0 to
  # disable the updaters
  updatersInterval: 12
trivy:
  # enabled the flag to enable Trivy scanner
  enabled: true
  replicas: 1
  # gitHubToken the GitHub access token to download Trivy DB
  gitHubToken: ""
  # skipUpdate the flag to disable Trivy DB downloads from GitHub
  #
  # You might want to set the value of this flag to `true` in test or CI/CD environments to avoid GitHub rate limiting issues.
  # If the value is set to `true` you have to manually download the `trivy.db` file and mount it in the
  # `/home/scanner/.cache/trivy/db/trivy.db` path.
  skipUpdate: false

# The persistence is always enabled and a default StorageClass
# is needed in the k8s cluster to provision volumes dynamicly.
# Specify another StorageClass in the "storageClass" or set "existingClaim"
# if you have already existing persistent volumes to use
#
# For storing images and charts, you can also use "azure", "gcs", "s3",
# "swift" or "oss". Set it in the "imageChartStorage" section
persistence:
  persistentVolumeClaim:
    registry:
      # Use the existing PVC which must be created manually before bound,
      # and specify the "subPath" if the PVC is shared with other components
      existingClaim: ""
      # Specify the "storageClass" used to provision the volume. Or the default
      # StorageClass will be used(the default).
      # Set it to "-" to disable dynamic provisioning
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 100Gi
    jobservice:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
    database:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
    redis:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 1Gi
    trivy:
      existingClaim: ""
      storageClass: "tanzu"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
  # Define which storage backend is used for registry and chartmuseum to store
  # images and charts. Refer to
  # https://github.com/docker/distribution/blob/master/docs/configuration.md#storage
  # for the detail.
  imageChartStorage:
    # Specify whether to disable `redirect` for images and chart storage, for
    # backends which not supported it (such as using minio for `s3` storage type), please disable
    # it. To disable redirects, simply set `disableredirect` to `true` instead.
    # Refer to
    # https://github.com/docker/distribution/blob/master/docs/configuration.md#redirect
    # for the detail.
    disableredirect: false
    # Specify the "caBundleSecretName" if the storage service uses a self-signed certificate.
    # The secret must contain keys named "ca.crt" which will be injected into the trust store
    # of registry's and chartmuseum's containers.
    # caBundleSecretName:

    # Specify the type of storage: "filesystem", "azure", "gcs", "s3", "swift",
    # "oss" and fill the information needed in the corresponding section. The type
    # must be "filesystem" if you want to use persistent volumes for registry
    # and chartmuseum
    type: filesystem
    filesystem:
      rootdirectory: /storage
      #maxthreads: 100
    azure:
      accountname: accountname # required
      accountkey: base64encodedaccountkey # required
      container: containername # required
      realm: core.windows.net # optional
    gcs:
      bucket: bucketname # required
      # The base64 encoded json file which contains the key
      encodedkey: base64-encoded-json-key-file # optional
      rootdirectory: null # optional
      chunksize: 5242880 # optional
    s3:
      region: us-west-1 # required
      bucket: bucketname # required
      accesskey: null # eg, awsaccesskey
      secretkey: null # eg, awssecretkey
      regionendpoint: null # optional, eg, http://myobjects.local
      encrypt: false # optional
      keyid: null # eg, mykeyid
      secure: true # optional
      v4auth: true # optional
      chunksize: null # optional
      rootdirectory: null # optional
      storageclass: STANDARD # optional
    swift:
      authurl: https://storage.myprovider.com/v3/auth
      username: username
      password: password
      container: containername
      region: null # eg, fr
      tenant: null # eg, tenantname
      tenantid: null # eg, tenantid
      domain: null # eg, domainname
      domainid: null # eg, domainid
      trustid: null # eg, trustid
      insecureskipverify: null # bool eg, false
      chunksize: null # eg, 5M
      prefix: null # eg
      secretkey: null # eg, secretkey
      accesskey: null # eg, accesskey
      authversion: null # eg, 3
      endpointtype: null # eg, public
      tempurlcontainerkey: null # eg, false
      tempurlmethods: null # eg
    oss:
      accesskeyid: accesskeyid
      accesskeysecret: accesskeysecret
      region: regionname
      bucket: bucketname
      endpoint: null # eg, endpoint
      internal: null # eg, false
      encrypt: null # eg, false
      secure: null # eg, true
      chunksize: null # eg, 10M
      rootdirectory: null # eg, rootdirectory

# The http/https network proxy for clair, core, jobservice, trivy
proxy:
  httpProxy:
  httpsProxy:
  noProxy: 127.0.0.1,localhost,.local,.internal
